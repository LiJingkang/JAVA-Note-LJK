<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!-- 通过component-scan让Spring扫描org.swinglife.controller下的所有的类，让Spring的代码注解生效 -->     
    <context:component-scan base-package="com.newings.controller" />
        <!--  在xml配置了这个标签后，spring可以自动去扫描base-pack下面或者子包下面的Java文件，如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean -->
    
    <context:annotation-config />

    <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="autodetectAnnotations" value="true" />
        <property name="aliases">
            <util:map>
                <entry key="Page" value="org.springframework.data.domain.PageImpl" />
                <entry key="Page" value="com.github.pagehelper.Page" />
                <entry key="pageable" value="org.springframework.data.domain.PageRequest" />
            </util:map>
        </property>
    </bean>


    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
    </bean>


    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean
                class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <property name="marshaller" ref="xstreamMarshaller" />
                <property name="unmarshaller" ref="xstreamMarshaller" />
            </bean>
            <bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            </bean>

<!--             <bean -->
<!--             class="org.springframework.http.converter.json.GsonHttpMessageConverter"> -->
<!--             </bean> -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
        
        <mvc:argument-resolvers>
            <bean
                class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/js/**" />
            <mvc:exclude-mapping path="/css/**" />
            <mvc:exclude-mapping path="/img/**" />
            <mvc:exclude-mapping path="/fonts/**" />
            <bean class="com.newings.service.interceptor.LogInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**/page/**" />
            <bean class="com.newings.service.interceptor.ConfigPageInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:resources mapping="/js/**" location="/WEB-INF/velocity/js/" />
    <mvc:resources mapping="/css/**" location="/WEB-INF/velocity/css/" />
    <mvc:resources mapping="/img/**" location="/WEB-INF/velocity/img/" />
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/velocity/fonts/" />
    <mvc:default-servlet-handler />


    <!-- velocity视图解析器 -->
    <bean id="velocityViewResolver"
        class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="/" />
        <property name="suffix" value=".vm" />
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持 -->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性 -->
        <property name="requestContextAttribute" value="request" /><!--request属性引用名称 -->
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
        <property name="contentType" value="text/html;charset=UTF-8" />
    </bean>

    <!-- velocity环境配置 -->
    <bean id="velocityConfig"
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!-- velocity配置文件路径 -->
        <property name="configLocation" value="classpath:velocity.properties" />
        <!-- velocity模板路径 -->
        <property name="resourceLoaderPath" value="/WEB-INF/velocity" />
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
            </props>
        </property>
    </bean>

</beans>